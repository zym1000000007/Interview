/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
class Solution {
public:
    ListNode* add(ListNode* tail, int val) {
        ListNode* temp = new ListNode(val);
        if (!tail) {
            tail = temp;
        } else {
            tail->next = temp;
            tail = temp;
        }
        return tail;
    }
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2)
    {
        ListNode*newhead=nullptr,*p1,*p2,*tail;
        p1 = pHead1;
        p2 = pHead2;
        while ((p1) || (p2)) {
            if ((p1) && (p2) && (p1->val < p2->val)) {
                tail = add(tail,p1->val);
                p1 = p1->next;
            } else if ((p1) && (p2) && (p1->val >= p2->val)) {
                tail = add(tail,p2->val);
                p2 = p2->next;
            } else if (p1) {
                tail = add(tail,p1->val);
                p1 = p1->next;
            } else if (p2) {
                tail = add(tail,p2->val);
                p2 = p2->next;
            }
            if (newhead == nullptr) {
                newhead = tail;
            }
        }
        return newhead;
    }
};
